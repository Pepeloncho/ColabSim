



## Function called from THANATOS thread.
def damnation(UIpygame,eventEngine):

    """" damnation() procedure is called from the 'Thanatos' thread described on 'main.py' document on root directory.
    This function is invoked to safely call each thread's terminate() procedures and end the execution of the process.
    parameters: ('Master' structure, Master lock)"""
    #Destroy all creatures. They can't be regenerated.


    # Notice that UItkinter.py terminate() functionality isn't included as it is considered the 'main window' and this very
    #thread is called from within it's terminate() procedure when the user hits the close button on the interface
    #generated by it.




    #Calling procedure to end PyGame interface and finishing it's thread
    UIpygame.terminate()

    #Calling procedure to end 'eventEngine' Back-end thread used for time tracking and event triggers.
    eventEngine.terminate()




    #If you are aware at this point. 'UItkinter isn't referenced in this routine, that's because this routine is invoked
    #during exit protocol triggered by trying to shut down 'UItkinter' interface.